{
  "timestamp": "2025-09-25T13:09:40.962622",
  "overall_score": 32.0,
  "metrics": {
    "system_health": 7,
    "api_key_management": 6,
    "agent_functionality": 3,
    "chatbot_integration": 0,
    "program_creation": 0,
    "overall_quality": 3
  },
  "test_results": [
    {
      "category": "System",
      "test": "Backend Start",
      "success": true,
      "details": "Version: 2.0",
      "score": 8,
      "timestamp": "13:09:11"
    },
    {
      "category": "System",
      "test": "Health Check",
      "success": false,
      "details": "Local Storage: None",
      "score": 9,
      "timestamp": "13:09:11"
    },
    {
      "category": "System",
      "test": "Agent-System",
      "success": true,
      "details": "8/8 Agenten geladen",
      "score": 10,
      "timestamp": "13:09:11"
    },
    {
      "category": "API-Keys",
      "test": "Anthropic Speichern",
      "success": true,
      "details": "Key gespeichert: anthropic API key saved successfully",
      "score": 8,
      "timestamp": "13:09:11"
    },
    {
      "category": "API-Keys",
      "test": "Perplexity Speichern",
      "success": true,
      "details": "Key gespeichert: perplexity API key saved successfully",
      "score": 8,
      "timestamp": "13:09:11"
    },
    {
      "category": "API-Keys",
      "test": "Openai Speichern",
      "success": true,
      "details": "Key gespeichert: openai API key saved successfully",
      "score": 8,
      "timestamp": "13:09:11"
    },
    {
      "category": "API-Keys",
      "test": "Status Check",
      "success": false,
      "details": "0 Services konfiguriert",
      "score": 0,
      "timestamp": "13:09:11"
    },
    {
      "category": "Agent-Test",
      "test": "Code Agent",
      "success": false,
      "details": "Keywords gefunden: 0/4, Agent: unbekannt, Response: 26 Zeichen",
      "score": 0,
      "timestamp": "13:09:12"
    },
    {
      "category": "Agent-Test",
      "test": "Research Agent",
      "success": false,
      "details": "Keywords gefunden: 0/4, Agent: unbekannt, Response: 598 Zeichen",
      "score": 0,
      "timestamp": "13:09:15"
    },
    {
      "category": "Agent-Test",
      "test": "Writing Agent",
      "success": true,
      "details": "Keywords gefunden: 3/4, Agent: unbekannt, Response: 545 Zeichen",
      "score": 6,
      "timestamp": "13:09:18"
    },
    {
      "category": "Agent-Test",
      "test": "Data Agent",
      "success": false,
      "details": "Keywords gefunden: 0/4, Agent: unbekannt, Response: 598 Zeichen",
      "score": 0,
      "timestamp": "13:09:22"
    },
    {
      "category": "Agent-Test",
      "test": "QA Agent",
      "success": true,
      "details": "Keywords gefunden: 3/4, Agent: unbekannt, Response: 446 Zeichen",
      "score": 6,
      "timestamp": "13:09:24"
    },
    {
      "category": "Agent-Test",
      "test": "GitHub Agent",
      "success": true,
      "details": "Keywords gefunden: 3/4, Agent: unbekannt, Response: 346 Zeichen",
      "score": 6,
      "timestamp": "13:09:24"
    },
    {
      "category": "Agent-Test",
      "test": "File Agent",
      "success": false,
      "details": "Keywords gefunden: 2/4, Agent: unbekannt, Response: 561 Zeichen",
      "score": 4,
      "timestamp": "13:09:26"
    },
    {
      "category": "Agent-Test",
      "test": "Session Agent",
      "success": false,
      "details": "Keywords gefunden: 1/4, Agent: unbekannt, Response: 619 Zeichen",
      "score": 2,
      "timestamp": "13:09:29"
    },
    {
      "category": "Chatbot",
      "test": "Multi-Agent App-Entwicklung",
      "success": false,
      "details": "Agent: , Response: 571 Zeichen",
      "score": 5,
      "timestamp": "13:09:31"
    },
    {
      "category": "Chatbot",
      "test": "Dokumentation und Testing",
      "success": false,
      "details": "Agent: , Response: 437 Zeichen",
      "score": 5,
      "timestamp": "13:09:34"
    },
    {
      "category": "Chatbot",
      "test": "Projektmanagement",
      "success": false,
      "details": "Agent: , Response: 160 Zeichen",
      "score": 5,
      "timestamp": "13:09:35"
    },
    {
      "category": "Programm-Erstellung",
      "test": "Xionimus Multi-Agent App",
      "success": false,
      "details": "Programm-Elemente: 0/8, Response: 437 Zeichen, Agent: ",
      "score": 1,
      "timestamp": "13:09:40"
    }
  ],
  "agent_results": {
    "Code Agent": {
      "success": false,
      "score": 0,
      "content_length": 26,
      "keywords_found": 0,
      "agent_used": ""
    },
    "Research Agent": {
      "success": false,
      "score": 0,
      "content_length": 598,
      "keywords_found": 0,
      "agent_used": ""
    },
    "Writing Agent": {
      "success": true,
      "score": 6,
      "content_length": 545,
      "keywords_found": 3,
      "agent_used": ""
    },
    "Data Agent": {
      "success": false,
      "score": 0,
      "content_length": 598,
      "keywords_found": 0,
      "agent_used": ""
    },
    "QA Agent": {
      "success": true,
      "score": 6,
      "content_length": 446,
      "keywords_found": 3,
      "agent_used": ""
    },
    "GitHub Agent": {
      "success": true,
      "score": 6,
      "content_length": 346,
      "keywords_found": 3,
      "agent_used": ""
    },
    "File Agent": {
      "success": false,
      "score": 4,
      "content_length": 561,
      "keywords_found": 2,
      "agent_used": ""
    },
    "Session Agent": {
      "success": false,
      "score": 2,
      "content_length": 619,
      "keywords_found": 1,
      "agent_used": ""
    }
  },
  "created_programs": [
    {
      "name": "Xionimus Todo-App",
      "success": false,
      "score": 1,
      "content": "ü§ñ **Offline-Modus aktiviert** (Verbindungsprobleme erkannt)\n\n# Python Code Beispiel\n# Erstellt basierend auf Ihrer Anfrage: \"\n        Erstelle mit Xionimus AI eine vollst√§ndig...\"\n\ndef example_function():\n    '''\n    Diese Funktion wurde automatisch generiert.\n    Passen Sie sie an Ihre Bed√ºrfnisse an.\n    '''\n    print(\"Hello from python!\")\n    return \"Erfolgreich ausgef√ºhrt\"\n\n# Verwendung:\nresult = example_function()\nprint(result)\n",
      "agent_used": ""
    }
  ],
  "recommendations": [
    "Backend neu starten",
    "Dependencies pr√ºfen",
    "Logs analysieren"
  ]
}