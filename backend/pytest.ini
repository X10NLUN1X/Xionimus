[pytest]
# Pytest configuration for Xionimus AI Backend

testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow tests
    security: Security-related tests
    health: Health check tests

# Coverage options (optional)
# Uncomment to enable coverage reporting
# addopts = --cov=app --cov-report=html --cov-report=term

[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */DEPRECATED_*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod